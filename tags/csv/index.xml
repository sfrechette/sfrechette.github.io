<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>csv on Stéphane Fréchette</title>
    <link>https://stephanefrechette.dev/tags/csv/</link>
    <description>Recent content in csv on Stéphane Fréchette</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 09 Oct 2017 19:52:18 -0400</lastBuildDate>
    
	<atom:link href="https://stephanefrechette.dev/tags/csv/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Fetching NHL Play by Play v2</title>
      <link>https://stephanefrechette.dev/posts/fetching-nhl-play-by-play-v2/</link>
      <pubDate>Mon, 09 Oct 2017 19:52:18 -0400</pubDate>
      
      <guid>https://stephanefrechette.dev/posts/fetching-nhl-play-by-play-v2/</guid>
      <description>Finally the 2017-2018 NHL hockey season has begun! But wait&amp;#8230; **PANIC** my little thingy nhlplaybyplay-node for fetching games and play-by-play does not work anymore&amp;#8230; Hmmm, after some research it looked like I needed to do some updates and fixes in order to make it work again&amp;#8230; Instead I decided to create another Node.js app nhlplaybyplay2-node
The following is a mirrored post from the README.md on the Github repo -&amp;gt; https://github.</description>
    </item>
    
    <item>
      <title>Fetching NHL Play by Play game data (part 2)</title>
      <link>https://stephanefrechette.dev/posts/fetching-nhl-play-play-game-data-part-2/</link>
      <pubDate>Fri, 09 Dec 2016 10:25:54 -0400</pubDate>
      
      <guid>https://stephanefrechette.dev/posts/fetching-nhl-play-play-game-data-part-2/</guid>
      <description>Following-up from a previous post Fetching NHL Play by Play game data where I created a Node.js app that enabled the fetching of NHL Play by Play JSON game files. The next step was to enable the parsing of JSON files into CSV files in order to do some further exploring&amp;#8230; say like analyzing with R, load into a RDBMS, or visualizing it!
So I added a new javascript file convert.</description>
    </item>
    
  </channel>
</rss>