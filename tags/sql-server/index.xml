<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sql server on Stéphane Fréchette</title>
    <link>https://stephanefrechette.dev/tags/sql-server/</link>
    <description>Recent content in sql server on Stéphane Fréchette</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 03 Jul 2019 09:30:49 -0400</lastBuildDate>
    
	<atom:link href="https://stephanefrechette.dev/tags/sql-server/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Deploying single instance SQL Server 2017 on GKE</title>
      <link>https://stephanefrechette.dev/posts/deploying-single-instance-sql-server-2017-on-gke/</link>
      <pubDate>Wed, 03 Jul 2019 09:30:49 -0400</pubDate>
      
      <guid>https://stephanefrechette.dev/posts/deploying-single-instance-sql-server-2017-on-gke/</guid>
      <description>Kubernetes is an open-source container orchestration system for automating deployment, scaling and management of containerized applications. Running a SQL Server database on Kubernetes is a topic of discussion nowadays as Kubernetes provides ways to provision stateful containers using persistent volumes, statefulsets, etc.
The following post is a tutorial we recently published on Google’s Partner Solutions that demonstrates how to provision a single instance of SQL Server 2017 on Linux on GKE using Regional persistent disks.</description>
    </item>
    
    <item>
      <title>SQL Server HA using Kubernetes in Azure Container Services (AKS)</title>
      <link>https://stephanefrechette.dev/posts/sql-server-ha-using-kubernetes-in-azure-container-services-aks/</link>
      <pubDate>Wed, 25 Apr 2018 13:40:28 -0400</pubDate>
      
      <guid>https://stephanefrechette.dev/posts/sql-server-ha-using-kubernetes-in-azure-container-services-aks/</guid>
      <description>In a nutshell, Kubernetes is a container orchestration tool that enables container management at scale. Kubernetes isn’t a replacement for Docker. However, Kubernetes is a replacement for some of the higher-level technologies that have emerged around Docker (i.e Docker Swarm). To learn more about Kubernetes, check out this Getting Started Guide.
Enters Azure Container Service (AKS) which manages your hosted Kubernetes environment, making it quick and easy to deploy and manage containerized applications without container orchestration expertise.</description>
    </item>
    
    <item>
      <title>SQL Graph in SQL Server 2017</title>
      <link>https://stephanefrechette.dev/posts/sql-graph-sql-server-2017/</link>
      <pubDate>Tue, 16 May 2017 09:35:21 -0400</pubDate>
      
      <guid>https://stephanefrechette.dev/posts/sql-graph-sql-server-2017/</guid>
      <description>As I mentioned several times before&amp;#8230; Graphs are everywhere! Graph features are being introduced in SQL Server 2017. Offering graph database capabilities to model many-to-many relationships. The graph relationships are integrated into Transact-SQL and receive the benefits of using SQL Server as the foundational database management system.
What is a graph database? In context, a graph database is a database that uses graph structures for semantic queries with nodes, edges and properties to represent and store data.</description>
    </item>
    
    <item>
      <title>Configure and manage SQL Server on Linux</title>
      <link>https://stephanefrechette.dev/posts/configure-manage-sql-server-linux/</link>
      <pubDate>Mon, 10 Apr 2017 14:42:14 -0400</pubDate>
      
      <guid>https://stephanefrechette.dev/posts/configure-manage-sql-server-linux/</guid>
      <description>SQL Server Configuration Manager is a tool to manage the services associated with SQL Server running on Windows. To configure and manage SQL Server on Linux we use mssql-conf. mssql-conf is a configuration script that installs with SQL Server vNext (Linux). Latest release and documentation available here -&amp;gt; https://docs.microsoft.com/en-us/sql/linux/
The tool is installed in the following directory path /opt/mssql/bin let&amp;#8217;s explore what mssql-conf is all about.
Open a Terminal session and see what type of help and information we get&amp;#8230;</description>
    </item>
    
    <item>
      <title>Running SQL Server on Linux in Docker on Windows 10</title>
      <link>https://stephanefrechette.dev/posts/running-sql-server-linux-docker-windows-10/</link>
      <pubDate>Tue, 21 Mar 2017 12:23:03 -0400</pubDate>
      
      <guid>https://stephanefrechette.dev/posts/running-sql-server-linux-docker-windows-10/</guid>
      <description>What is Docker? Docker is an open platform for developers and sysadmins to build, ship, and run distributed applications, whether on laptops, data centers, VMs, or in the cloud. Docker allows applications to be isolated into containers with instructions for exactly what they need to survive that can be easily ported from machine to machine. Though Virtual machines also allow the exact same thing, and numerous other tools already exist to make rebuilding these configurations portable and reproducible, Docker has a more simplified structure compared to both of these, the real area where it causes disruption is resource efficiency.</description>
    </item>
    
    <item>
      <title>SQL Server on Linux - What&#39;s installed?</title>
      <link>https://stephanefrechette.dev/posts/sql-server-linux-whats-installed/</link>
      <pubDate>Wed, 18 Jan 2017 23:23:49 -0400</pubDate>
      
      <guid>https://stephanefrechette.dev/posts/sql-server-linux-whats-installed/</guid>
      <description>Software&amp;#8230; Are you the curious type like me who needs to know what&amp;#8217;s been installed and where it is located on your system!
Exploring the public preview of SQL Server vNext CTP1.1, and installing the following necessary packages mssql-server, mssql-tools, and msodbcsql for running and using SQL Server on Linux. This post is about these packages, finding out what files are installed and where, but before we jump in some minor housekeeping stuff&amp;#8230;</description>
    </item>
    
    <item>
      <title>Installing SQL Server on Linux on Ubuntu</title>
      <link>https://stephanefrechette.dev/posts/installing-sql-server-linux-ubuntu/</link>
      <pubDate>Tue, 22 Nov 2016 22:49:55 -0400</pubDate>
      
      <guid>https://stephanefrechette.dev/posts/installing-sql-server-linux-ubuntu/</guid>
      <description>SQL Server vNext represents a major step towards making SQL Server a platform that enables choices of development languages, data types, on-premises and in the cloud, and across operating systems by bringing the power of SQL Server to Linux, Linux-based Docker containers, and Windows.
For all the downloads, code samples and to stay informed visit the following link SQL Server v.Next Public Preview
I am sharing with you my experiences, gotchas in installing SQL Server on Linux on an existing Ubuntu VM I already had running for a while&amp;#8230;I have since installed SQL Server for Linux on several other local VM&amp;#8217;s and in Azure without any issues just by following the documentation.</description>
    </item>
    
    <item>
      <title>Connect to SQL Server using Apache Spark</title>
      <link>https://stephanefrechette.dev/posts/connect-sql-server-using-apache-spark/</link>
      <pubDate>Fri, 16 Sep 2016 11:59:40 -0400</pubDate>
      
      <guid>https://stephanefrechette.dev/posts/connect-sql-server-using-apache-spark/</guid>
      <description>In-memory distributed processing for large datasets&amp;#8230; How to connect to SQL Server using Apache Spark? The Spark documentation covers the basics of the API and Dataframes, there is a lack of info. and examples on actually how to get this feature to work.
    First, what is Apache Spark? Apache Spark is an open source big data processing framework built around speed, ease of use, and sophisticated analytics.</description>
    </item>
    
    <item>
      <title>SQL Server 2016 Row-Level Security</title>
      <link>https://stephanefrechette.dev/posts/sql-server-2016-row-level-security/</link>
      <pubDate>Thu, 19 May 2016 16:47:34 -0400</pubDate>
      
      <guid>https://stephanefrechette.dev/posts/sql-server-2016-row-level-security/</guid>
      <description>With SQL Server 2016 literately just days away from being officially available to public for download (Get ready, SQL Server 2016 coming on June 1st). I wanted to highlight one important new key future called Row-Level Security. So what is Row Level Security? Row-Level Security enables customers to control access to rows in a database table based on the characteristics of the user executing a query (e.g., group membership or execution context).</description>
    </item>
    
    <item>
      <title>SQL Server 2016 - Dynamic Data Masking</title>
      <link>https://stephanefrechette.dev/posts/anonymize-sensitive-data-dynamic-data-masking/</link>
      <pubDate>Sun, 06 Mar 2016 15:17:24 -0400</pubDate>
      
      <guid>https://stephanefrechette.dev/posts/anonymize-sensitive-data-dynamic-data-masking/</guid>
      <description>With SQL Server 2016 just around the corner, a series of new features and enhancements will be introduced. More specifically some important Security Upgrades; Always Encrypted, Row Level Security, and Dynamic Data Masking. This post covers SQL Server 2016 &amp;#8211; Dynamic Data Masking (DDM).
_Note: DDM is also available in Azure SQL Database see the following link for details -&amp;gt; http://bit.ly/1eG7Que_
  What is Dynamic Data Masking? Dynamic Data Masking enables you to anonymize sensitive data, real-time obfuscation of data to prevent unauthorized access by controlling how the data appears in the output of database queries.</description>
    </item>
    
    <item>
      <title>Importing AdventureWorks data into Neo4j</title>
      <link>https://stephanefrechette.dev/posts/importing-adventureworks-data-into-neo4j/</link>
      <pubDate>Wed, 01 Apr 2015 11:45:53 -0400</pubDate>
      
      <guid>https://stephanefrechette.dev/posts/importing-adventureworks-data-into-neo4j/</guid>
      <description>Graphs are everywhere! In my efforts to spread the word and inform SQL Server Professionals about Neo4j and learn how to take a relational database schema and model it as a graph&amp;#8230; AdventureWorks was a no-brainer! Let&amp;#8217;s explore how to import a subset of the AdventureWorks database from SQL Server (RDBMS) into Neo4j (GraphDB).
But first some prerequisites. You should at least have a basic understanding of what is a property graph model and have completed the following modeling guidelines.</description>
    </item>
    
    <item>
      <title>Data Analytics with R and SQL Server</title>
      <link>https://stephanefrechette.dev/posts/data-analytics-r-sql-server/</link>
      <pubDate>Wed, 07 Jan 2015 20:04:51 -0400</pubDate>
      
      <guid>https://stephanefrechette.dev/posts/data-analytics-r-sql-server/</guid>
      <description>First Happy New Year and best wishes for 2015!
Yes, Data Analytics with R and SQL Server &amp;#8230; As Data and Business Intelligence Architects I personally think we just can&amp;#8217;t dismiss or push aside the Data Science &amp;#8220;landscape&amp;#8221;. Hence that&amp;#8217;s why I registered and currently more than half way through the Data Science Specialization on Coursera from the Johns Hopkins University. Even though I have been working with R for a while I wanted to get some kind of recognition, attestation for my skills and also just because I can 😉</description>
    </item>
    
  </channel>
</rss>