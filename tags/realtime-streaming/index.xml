<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>realtime streaming on Stéphane Fréchette</title>
    <link>https://stephanefrechette.dev/tags/realtime-streaming/</link>
    <description>Recent content in realtime streaming on Stéphane Fréchette</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 17 Apr 2018 11:59:21 -0400</lastBuildDate>
    
	<atom:link href="https://stephanefrechette.dev/tags/realtime-streaming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ingest real time streaming data for time series analysis</title>
      <link>https://stephanefrechette.dev/posts/ingest-real-time-streaming-data-for-time-series-analysis/</link>
      <pubDate>Tue, 17 Apr 2018 11:59:21 -0400</pubDate>
      
      <guid>https://stephanefrechette.dev/posts/ingest-real-time-streaming-data-for-time-series-analysis/</guid>
      <description>This post describes how to ingest sample real time streaming data from PubNub to a Postgres database with the TimescaleDB extension installed and enabled for time series analysis. I wrote a small Node.js app to test and demonstrate how TimescaleDB performs well in fetching results while data is also being ingested in the database. Will be using the following data feed, Market Orders – an artificial data stream that provides the latest market orders for a fictitious marketplace and you can clone or download the GitHub repository from -&amp;gt; https://github.</description>
    </item>
    
  </channel>
</rss>