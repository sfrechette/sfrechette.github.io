<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>node.js on Stéphane Fréchette</title>
    <link>https://stephanefrechette.dev/tags/node.js/</link>
    <description>Recent content in node.js on Stéphane Fréchette</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 17 Apr 2018 11:59:21 -0400</lastBuildDate>
    
	<atom:link href="https://stephanefrechette.dev/tags/node.js/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ingest real time streaming data for time series analysis</title>
      <link>https://stephanefrechette.dev/posts/ingest-real-time-streaming-data-for-time-series-analysis/</link>
      <pubDate>Tue, 17 Apr 2018 11:59:21 -0400</pubDate>
      
      <guid>https://stephanefrechette.dev/posts/ingest-real-time-streaming-data-for-time-series-analysis/</guid>
      <description>This post describes how to ingest sample real time streaming data from PubNub to a Postgres database with the TimescaleDB extension installed and enabled for time series analysis. I wrote a small Node.js app to test and demonstrate how TimescaleDB performs well in fetching results while data is also being ingested in the database. Will be using the following data feed, Market Orders – an artificial data stream that provides the latest market orders for a fictitious marketplace and you can clone or download the GitHub repository from -&amp;gt; https://github.</description>
    </item>
    
    <item>
      <title>Fetching NHL Play by Play v2</title>
      <link>https://stephanefrechette.dev/posts/fetching-nhl-play-by-play-v2/</link>
      <pubDate>Mon, 09 Oct 2017 19:52:18 -0400</pubDate>
      
      <guid>https://stephanefrechette.dev/posts/fetching-nhl-play-by-play-v2/</guid>
      <description>Finally the 2017-2018 NHL hockey season has begun! But wait… **PANIC** my little thingy nhlplaybyplay-node for fetching games and play-by-play does not work anymore… Hmmm, after some research it looked like I needed to do some updates and fixes in order to make it work again… Instead I decided to create another Node.js app nhlplaybyplay2-node.
The following is a mirrored post from the README.md on the Github repo -&amp;gt; https://github.</description>
    </item>
    
    <item>
      <title>Fetching NHL Play by Play game data (part 2)</title>
      <link>https://stephanefrechette.dev/posts/fetching-nhl-play-play-game-data-part-2/</link>
      <pubDate>Fri, 09 Dec 2016 10:25:54 -0400</pubDate>
      
      <guid>https://stephanefrechette.dev/posts/fetching-nhl-play-play-game-data-part-2/</guid>
      <description>Following-up from a previous post Fetching NHL Play by Play game data where I created a Node.js app that enabled the fetching of NHL Play by Play JSON game files. The next step was to enable the parsing of JSON files into CSV files in order to do some further exploring… say like analyzing with R, load into a RDBMS, or visualizing it!
So I added a new javascript file convert.</description>
    </item>
    
    <item>
      <title>Fetching NHL Play by Play game data</title>
      <link>https://stephanefrechette.dev/posts/fetching-nhl-play-play-game-data/</link>
      <pubDate>Tue, 25 Oct 2016 15:16:20 -0400</pubDate>
      
      <guid>https://stephanefrechette.dev/posts/fetching-nhl-play-play-game-data/</guid>
      <description>Fetching NHL Play by Play game data I created a Node.js application called nhlplaybyplay-nodethat provides the means for accessing, fetching the NHL Schedule and Play by Play game data files which are in JSON format.
Hope your familiar with this…
The following URL retrieves the complete 2016-2017 NHL season schedule
http://live.nhl.com/GameData/SeasonSchedule-20162017.jsonWhile this one retrieves the entire Play by Play game data for game 2016020031 (BUF vs. EDM on October 16 @ 19:00 EDT)</description>
    </item>
    
  </channel>
</rss>